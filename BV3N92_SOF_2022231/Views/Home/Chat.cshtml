@using Microsoft.AspNetCore.Identity
@inject SignInManager<SiteUser> SignInManager
@inject UserManager<SiteUser> UserManager

@{
    ViewData["Title"] = "Chat";

    var currentUser = await UserManager.GetUserAsync(User);

    Random r = new Random();
    List<string> motivationalMessages = new List<string>()
    {
    "Today is a nice day to live!",
    "We hope you are having a nice day!",
    "Today might be the day you fall in love!",
    "Time to chat with someone!"
    };
}

<header>
    <nav class="navbar navbar-expand-lg navbar-light">
        <div class="container-fluid">
            <h1>
                <a class="btn-link text-white" asp-area="" asp-controller="Home" asp-action="Index">UniSex</a>
            </h1>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                    aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                <ul class="navbar-nav flex-grow-1">
                    <li class="nav-item">
                        <a class="nav-link text-white" asp-area="" asp-controller="Home" asp-action="Profile">Profile</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" asp-area="" asp-controller="Home" asp-action="Match">Match</a>
                    </li>
                    @if (SignInManager.IsSignedIn(User) && await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "Admin"))
                    {
                        <li class="nav-item">
                            <a class="nav-link text-danger" asp-area="" asp-controller="Admin" asp-action="ManageAll">Admin Control Panel</a>
                        </li>
                    }

                    @if (SignInManager.IsSignedIn(User) && await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "PremiumUser"))
                    {
                        <li class="nav-item">
                            <a class="nav-link text-warning" asp-area="" asp-controller="PremiumUser" asp-action="PremiumLikes">Likes (Premium)</a>
                        </li>
                    }
                </ul>
                <partial name="_LoginPartial" />
            </div>
        </div>
    </nav>
</header>

@if (currentUser.MatchedUsers.Count > 0)
{
    <div class="main-chat">
        <div class="side-menu">
            @foreach (var match in currentUser.MatchedUsers)
            {
                <div id="create-room-modal">
                    <form asp-controller="Home" asp-action="CreateRoom">
                        <input type="hidden" value="@UserManager.Users.First(t => t.Id == match.WhoLikedId).FirstName" id="create-room-btn" name="name" />
                    </form>
                </div>
                <a class="room-button" asp-controller="Home" asp-action="PrivateChat" asp-route-id="@UserManager.Users.First(t => t.Id == match.WhoLikedId).Id">
                    @UserManager.Users.First(t => t.Id == match.WhoLikedId).FirstName
                </a>
            }
        </div>
        <div class="chat-window">
            <div class="chat-body">
                <div class="motivational-message">
                    @motivationalMessages[r.Next(0,5)]
                </div>
            </div>
            <div class="chat-input">
            </div>
        </div>
    </div>
}
else
{
    <div class="col d-flex justify-content-center">
            <div class="card" style="width: 18rem;">
                <div class="card-body">
                    <h5 class="card-title">Currently you have no matches :(</h5>
                </div>
            </div>
        </div>
}


<script src="~/js/site.js"></script>
